#!/usr/bin/env bash
set -euo pipefail

# Generated by Terraform
# Cluster: ${cluster_name}
# Resource Group: ${resource_group}
# NGINX Controller Manifest: ${nginx_manifest}

echo "[INFO] Connecting to AKS cluster: ${cluster_name} (RG: ${resource_group})"
az aks get-credentials --resource-group "${resource_group}" --name "${cluster_name}" --overwrite-existing 1>/dev/null

if command -v kubectx >/dev/null 2>&1; then
  echo "[INFO] Switching kubectx to: ${cluster_name}"
  kubectx "${cluster_name}" || true
else
  echo "[WARN] kubectx not found; attempting kubectl context switch"
  kubectl config use-context "${cluster_name}" || true
fi

echo "[INFO] Current context: $(kubectl config current-context)"

echo "[INFO] Applying NGINX Ingress Controller manifest: ${nginx_manifest}"
if [[ ! -f "${nginx_manifest}" ]]; then
  echo "[ERROR] Manifest not found: ${nginx_manifest}" >&2
  exit 1
fi
kubectl apply -f "${nginx_manifest}"

echo "[INFO] Controller service status (namespace: app-routing-system)"
kubectl get svc -n app-routing-system -l app.kubernetes.io/component=controller -o wide || true

echo "[INFO] kube-system pods (first 50):"
kubectl get pods -n kube-system -o wide | head -n 50 || true

echo "[INFO] Node status:"
kubectl get nodes -o wide || true

echo "[DONE] Cluster ${cluster_name} checks complete."
