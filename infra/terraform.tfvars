# Terraform Variables Configuration
# Secure deployment configuration - NO SENSITIVE VALUES
# All passwords and secrets are auto-generated by Terraform

# Core Configuration
environment   = "dev"
project       = "aks102"
location      = "germanywestcentral"
location_code = "gwc"

# Network Configuration
vnet_address_space = "10.32.0.0/16"
pod_cidr           = "192.168.0.0/16"
service_cidr       = "172.16.0.0/16"
dns_service_ip     = "172.16.0.10"

# AKS Configuration
kubernetes_version = "1.31.9"

# SQL Server Configuration (Auto-detected from current user)
sql_admin_username = "sqladmin"
# sql_admin_password is auto-generated (see secrets.tf)
# sql_azuread_admin_login is auto-detected from current user
# sql_azuread_admin_object_id is auto-detected from current user

# Security Configuration (Auto-detected from current user)
# security_email is auto-detected from current user

keyvault_administrator_principal_id = "f843ac69-ed69-4081-aa65-60f6f2143e80"

# Application Configuration
app_namespace       = "aks-app"
app_service_account = "workload-identity-sa"

# SSL Configuration (Auto-generated)
# ssl_cert_password is auto-generated (see secrets.tf)

# Feature Flags
enable_container_registry = true
enable_secret_rotation    = true
secret_rotation_interval  = "2m"

# AKS API Server Private
enable_private_cluster = false

# Tags (Non-sensitive)
tags = {
  "application"        = "ELSE DigitalEcosystem"
  "costcenter"         = "1R01P3442"
  "costcenterowner"    = "callisto.gatti@it.abb.com"
  "country"            = "Poland"
  "environment"        = "stage"
  "igar"               = "APM0011392"
  "itsmnr"             = "ritm0350338"
  "model"              = "dedicated"
  "name"               = "abb-pol-el-serviceecosystemstage"
  "owningbusinessarea" = "EL"
  "owningdivision"     = "ELSE"
  "budget"             = ""
  "criticality"        = "business critical"
  "managedby"          = "terraform"
  "startdate"          = "2025-08-29"
}
clusters = {
  public = {
    name_suffix  = "public"
    subnet_cidr  = "10.32.0.0/24"
    min_count    = 1
    max_count    = 3
    vm_size      = "Standard_D2s_v3"
    applications = ["app1", "app2"]
  }
  private = {
    name_suffix  = "private"
    subnet_cidr  = "10.32.4.0/24"
    min_count    = 1
    max_count    = 2
    vm_size      = "Standard_D2s_v3"
    applications = ["api1", "api2"]
  }
}

# VNet Peering Configuration
enable_vnet_peering = true
hub_vnet_config = {
  subscription_id       = "29977929-2412-48ea-88ec-71d0d1414410"
  resource_group        = "rg-else-hub-prd-gwc-001"
  vnet_name             = "vnet-else-hub-prd-gwc-001"
  vnet_cidr             = "10.0.0.0/16"
  allow_gateway_transit = false
  use_remote_gateways   = false
}
vnet_peering_name = "peer-vnet-else-hub-prd-gwc-001"

# Private DNS Mode (EXTERNAL shared hub zones)
create_private_dns_zones       = false
use_external_private_dns_zones = true

# External Private DNS Link configuration
private_dns_config = {
  subscription_id = "29977929-2412-48ea-88ec-71d0d1414410"
  resource_group  = "rg-else-dns-prd-gwc-001"
  private_dns_zone_name = {
    key_vault    = "privatelink.vaultcore.azure.net"
    storage_blob = "privatelink.blob.core.windows.net"
    storage_file = "privatelink.file.core.windows.net"
    sql_database = "privatelink.database.windows.net"
  }
}

# Define the DNS Servers of the VNET (empty => Azure default). Keeping current single value for now.
custom_dns_servers = ["192.168.0.4"]

# SQL Server/Database
sqldb_sku_name       = "S1"
sqldb_zone_redundant = false

# SQL Short Term Backup Internal Hours and Retention Days
stb_backup_interval_hour = "12"
stb_days_of_retention    = "14"

# SQL Long Term Backup Retention
ltr_weekly_retention  = "P2W"
ltr_monthly_retention = "PT0S"
ltr_yearly_retention  = "PT0S"
ltr_week_of_year      = 1

# SQL Immutable Backups
ltr_immutable_backups_enabled = false

# Application Custom App
# Storage Account Replication Type
storage_replication_type = "LRS"