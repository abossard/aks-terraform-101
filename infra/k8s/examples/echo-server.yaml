---
# Namespace for the sample (safe to apply if it already exists)
apiVersion: v1
kind: Namespace
metadata:
  name: aks-app
  labels:
    app.kubernetes.io/name: aks-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-root
  namespace: aks-app
  labels:
    app: echo-root
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo-root
  template:
    metadata:
      labels:
        app: echo-root
    spec:
      containers:
        - name: echo
          image: ealen/echo-server:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: echo-root-svc
  namespace: aks-app
  labels:
    app: echo-root
spec:
  type: ClusterIP
  selector:
    app: echo-root
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-v1
  namespace: aks-app
  labels:
    app: echo-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo-v1
  template:
    metadata:
      labels:
        app: echo-v1
    spec:
      containers:
        - name: echo
          image: ealen/echo-server:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: echo-v1-svc
  namespace: aks-app
  labels:
    app: echo-v1
spec:
  type: ClusterIP
  selector:
    app: echo-v1
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo-ingress
  namespace: aks-app
  annotations:
    # Example: increase body size if needed
    # nginx.ingress.kubernetes.io/proxy-body-size: "4m"
    # If you want to force HTTPS redirects when TLS is configured later:
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # Example for backend protocol, not needed for this echo image:
    # nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
  labels:
    app.kubernetes.io/name: echo-ingress
spec:
  ingressClassName: nginx-internal
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: echo-root-svc
                port:
                  number: 80
          - path: /v1
            pathType: Prefix
            backend:
              service:
                name: echo-v1-svc
                port:
                  number: 80
