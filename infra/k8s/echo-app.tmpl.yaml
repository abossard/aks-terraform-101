---
# Namespace for the app (safe to apply if it already exists)
apiVersion: v1
kind: Namespace
metadata:
  name: ${namespace}
  labels:
    app.kubernetes.io/name: ${app_name}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-${app_name}
  namespace: ${namespace}
  labels:
    app: echo-${app_name}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo-${app_name}
  template:
    metadata:
      labels:
        app: echo-${app_name}
    spec:
      containers:
        - name: echo
          image: ealen/echo-server:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: echo-${app_name}-svc
  namespace: ${namespace}
  labels:
    app: echo-${app_name}
spec:
  type: ClusterIP
  selector:
    app: echo-${app_name}
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo-${app_name}-ingress
  namespace: ${namespace}
  labels:
    app.kubernetes.io/name: echo-${app_name}-ingress
spec:
  ingressClassName: ${ingress_class_name}
  rules:
    - http:
        paths:
          - path: /${app_name}
            pathType: Prefix
            backend:
              service:
                name: echo-${app_name}-svc
                port:
                  number: 80
